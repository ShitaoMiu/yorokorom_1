name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          path: yorokorom  # 코드를 가져올 디렉토리를 지정합니다.

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Install Gradle
        run: |
          wget https://services.gradle.org/distributions/gradle-8.4-bin.zip
          unzip -q gradle-8.4-bin.zip
          export PATH=$PWD/gradle-8.4/bin:$PATH

      - name: Build with Gradle
        working-directory: yorokorom/backend  # Gradle 빌드를 backend 디렉토리에서 수행합니다.
        run: gradle build

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}



      - name: Build Docker image
        working-directory: yorokorom/backend  # Docker build를 yorokorom/backend 디렉토리에서 수행합니다.
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t sunnam1607/springboot-images-new:latest .
          docker push sunnam1607/springboot-images-new:latest

      - name: SSH into Development Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USERNAME }}
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          port: ${{ secrets.DEV_SERVER_PORT }}
          script: |
            docker pull ${{ secrets.DEV_DOCKER_HUB_LASTEST }}
            docker stop yorokorom-container || true
            docker rm yorokorom-container || true
            docker run -d -p 8080:8080 --name yorokorom-container ${{ secrets.DEV_DOCKER_HUB_LASTEST }}
